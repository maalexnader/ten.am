<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Blog</title><description>A description of Blog</description><link>https://your-website-url.com</link><language>en</language><lastBuildDate>Thu, 26 Sep 2024 15:50:54 +0400</lastBuildDate><pubDate>Thu, 26 Sep 2024 15:50:54 +0400</pubDate><ttl>250</ttl><atom:link href="https://your-website-url.com/feed.rss" rel="self" type="application/rss+xml"/><item><guid isPermaLink="true">https://your-website-url.com/posts/first-post</guid><title>Customizing Typography in SwiftUI</title><description>A description of my first post.</description><link>https://your-website-url.com/posts/first-post</link><pubDate>Fri, 27 Sep 2024 10:00:00 +0400</pubDate><content:encoded><![CDATA[<h1>Customizing Typography in SwiftUI</h1><p>When building modern iOS apps, typography plays a critical role in creating a consistent and polished user experience. SwiftUI provides a built-in set of text styles through the Font extension—such as <code>.largeTitle</code>, <code>.headline</code>, <code>.caption</code>, and more. It might seem intuitive to extend Font to add your custom text styles from a design system like this:<br><code></code>`swift extension Font { static func customCallout() -&gt; Font { Font.custom("YourCustomFontName", size: UIFont.preferredFont(forTextStyle: .callout).pointSize) } }</p><pre><code>
Yet this approach can quickly become limiting and difficult to maintain, especially as your design system evolves.

Many modern branded design systems go beyond simple font size and weight adjustments. They include additional parameters like line height and kerning. These finer typography details add another layer of complexity. If you examine the Text Styles panel in Figma, you’ll notice that each style defines not only font size and weight but also properties like line height. When for example line height isn’t set to “Auto” and is expressed as a specific value, this needs to be accounted for when implementing your typography in SwiftUI.
</code></pre>]]></content:encoded></item></channel></rss>